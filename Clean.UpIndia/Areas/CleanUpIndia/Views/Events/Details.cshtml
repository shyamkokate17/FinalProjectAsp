
@using Microsoft.AspNetCore.Identity
@using Clean.UpIndia.Models.Enums
@*To find the user is logged in*@
@inject SignInManager<IdentityUser> _loginUserStatus
@*Get the user properties*@
@inject UserManager<IdentityUser> _userManager
@{
    bool isLoggedIn = _loginUserStatus.IsSignedIn(this.User); 
    bool isUserAdmin = false;
    IdentityUser user = await _userManager.GetUserAsync(this.User); 
    if (user != null) { isUserAdmin = await _userManager.IsInRoleAsync(user, MyIdentityRoleNames.AppAdmin.ToString()); }
}

@model Clean.UpIndia.Models.Event

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Event</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.EventName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.EventName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.EventDescription)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.EventDescription)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.EventDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.EventDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Locality)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Locality.LocalityName)
        </dd>
    </dl>
</div>
<div>
    @if (isUserAdmin)
    {
        <a class="btn btn-primary" asp-action="Edit" asp-route-id="@Model.EventId">Edit</a>
    }
    <a asp-action="Index">Back to List</a>
</div>
